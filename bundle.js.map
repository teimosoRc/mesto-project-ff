{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export function createCard({\r\n  data,\r\n  onDelete,\r\n  onLike,\r\n  currentUserId,\r\n  onImageClick,\r\n  template,\r\n}) {\r\n  const cardElement = template.querySelector(\".places__item\").cloneNode(true);\r\n  const deleteCardButton = cardElement.querySelector(\".card__delete-button\");\r\n\r\n  const cardLike = cardElement.querySelector(\".card__like-button\");\r\n  const imgCard = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  const counter = cardElement.querySelector(\".card__like-counter\");\r\n\r\n  imgCard.src = data.link;\r\n  imgCard.alt = data.name;\r\n  cardTitle.textContent = data.name;\r\n\r\n  if (data.likes.length) {\r\n    counter.classList.add(\"card__like-counter_is-active\");\r\n    counter.textContent = data.likes.length;\r\n  }\r\n\r\n  if (data.likes.find((owner) => owner[\"_id\"] === currentUserId)) {\r\n    cardLike.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  cardLike.addEventListener(\"click\", (evt) => {\r\n    onLike({\r\n      cardId: data[\"_id\"],\r\n      buttonElement: cardLike,\r\n      counterElement: counter,\r\n    });\r\n  });\r\n\r\n  imgCard.addEventListener(\"click\", (evt) => {\r\n    const data = { name: evt.target.alt, link: evt.target.src };\r\n    onImageClick(data);\r\n  });\r\n\r\n  if (data.owner[\"_id\"] === currentUserId) {\r\n    deleteCardButton.classList.add(\"card__delete-button_is-active\");\r\n    deleteCardButton.addEventListener(\"click\", () => {\r\n      onDelete({\r\n        cardId: data[\"_id\"],\r\n        cardElement: cardElement,\r\n        buttonElement: deleteCardButton,\r\n      });\r\n    });\r\n  }\r\n\r\n  return cardElement;\r\n}\r\n","function handlerKeydown (evt) {\r\n  if (evt.key === 'Escape') {\r\n    closeModal(document.querySelector('.popup_is-opened'))\r\n  }\r\n}\r\n\r\nexport function openModal (element) {\r\n  element.classList.add('popup_is-opened')\r\n  document.addEventListener('keydown', handlerKeydown)\r\n}\r\n\r\nexport function closeModal (element) {\r\n  element.classList.remove('popup_is-opened')\r\n  document.removeEventListener('keydown', handlerKeydown)\r\n}\r\n\r\nexport const handleModalClick = (event) => {\r\n  if (event.target.classList.contains('popup_is-opened')) {\r\n    return closeModal(event.target);\r\n  }\r\n\r\n  if (event.target.closest('.popup__close')) {\r\n    return closeModal(event.target.closest('.popup'));\r\n  }\r\n};","const hasInvalidInput = (inputList) =>\r\n  inputList.some((input) => !input.validity.valid);\r\n\r\nconst showInputError = ({\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass,\r\n  errorMessage,\r\n}) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  errorElement.classList.add(errorClass);\r\n  errorElement.textContent = errorMessage;\r\n\r\n  inputElement.classList.add(inputErrorClass);\r\n};\r\n\r\nconst hideInputError = ({\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass,\r\n}) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  errorElement.classList.remove(errorClass);\r\n  errorElement.textContent = \"\";\r\n\r\n  inputElement.classList.remove(inputErrorClass);\r\n};\r\n\r\nconst checkInputValidity = ({\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass,\r\n}) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError({\r\n      formElement,\r\n      inputElement,\r\n      errorMessage: inputElement.validationMessage,\r\n      errorClass,\r\n      inputErrorClass,\r\n    });\r\n  } else {\r\n    hideInputError({\r\n      formElement,\r\n      inputElement,\r\n      errorClass,\r\n      inputErrorClass,\r\n    });\r\n  }\r\n};\r\n\r\nconst toggleButtonState = ({\r\n  inputList,\r\n  submitButtonElement,\r\n  inactiveButtonClass,\r\n}) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    submitButtonElement.disabled = true;\r\n    submitButtonElement.classList.add(inactiveButtonClass);\r\n  } else {\r\n    submitButtonElement.disabled = false;\r\n    submitButtonElement.classList.remove(inactiveButtonClass);\r\n  }\r\n};\r\n\r\nconst setEventListeners = ({\r\n  formElement,\r\n  inputSelector,\r\n  inputErrorClass,\r\n  submitButtonSelector,\r\n  inactiveButtonClass,\r\n  errorClass,\r\n}) => {\r\n  const inputList = [...formElement.querySelectorAll(inputSelector)];\r\n  const submitButtonElement = formElement.querySelector(submitButtonSelector);\r\n\r\n  toggleButtonState({\r\n    inputList,\r\n    submitButtonElement,\r\n    inactiveButtonClass,\r\n  });\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      checkInputValidity({\r\n        formElement,\r\n        inputElement,\r\n        inputErrorClass,\r\n        errorClass,\r\n      });\r\n      toggleButtonState({\r\n        inputList,\r\n        submitButtonElement,\r\n        inactiveButtonClass,\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = ({\r\n  formSelector,\r\n  inputSelector,\r\n  submitButtonSelector,\r\n  inactiveButtonClass,\r\n  inputErrorClass,\r\n  errorClass,\r\n}) => {\r\n  const formList = document.querySelectorAll(formSelector);\r\n\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", (event) => {\r\n      event.preventDefault();\r\n    });\r\n\r\n    setEventListeners({\r\n      formElement,\r\n      inputSelector,\r\n      submitButtonSelector,\r\n      inactiveButtonClass,\r\n      inputErrorClass,\r\n      errorClass,\r\n    });\r\n  });\r\n};\r\n\r\nexport const clearValidation = (\r\n  formElement,\r\n  {\r\n    submitButtonSelector,\r\n    inactiveButtonClass,\r\n    inputSelector,\r\n    inputErrorClass,\r\n    errorClass,\r\n  }\r\n) => {\r\n  const inputList = [...formElement.querySelectorAll(inputSelector)];\r\n  const submitButtonElement = formElement.querySelector(submitButtonSelector);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError({\r\n      formElement,\r\n      inputElement,\r\n      inputErrorClass,\r\n      errorClass,\r\n    });\r\n  });\r\n\r\n  toggleButtonState({\r\n    inputList,\r\n    submitButtonElement,\r\n    inactiveButtonClass,\r\n  });\r\n};\r\n","const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-29\",\r\n  headers: {\r\n    authorization: \"5f021d0d-13ed-496f-9b89-19493d921125\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then(errorHandler);\r\n};\r\n\r\nexport const createCardApi = ({ name, link }) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      name,\r\n      link,\r\n    }),\r\n  }).then(errorHandler);\r\n};\r\n\r\nexport const getUser = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then(errorHandler);\r\n};\r\n\r\nexport const editProfileUser = ({ name, about }) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      about,\r\n    }),\r\n  }).then(errorHandler);\r\n};\r\n\r\nexport const likeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then(errorHandler);\r\n};\r\n\r\nexport const unLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(errorHandler);\r\n};\r\n\r\nexport const deleteCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    headers: config.headers,\r\n    method: \"DELETE\",\r\n  }).then(errorHandler);\r\n};\r\n\r\nexport const updateUserAvatar = (url) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    headers: config.headers,\r\n    method: \"PATCH\",\r\n    body: JSON.stringify({\r\n      avatar: url,\r\n    }),\r\n  }).then(errorHandler);\r\n};\r\n\r\nconst errorHandler = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n","import \"./pages/index.css\";\r\n\r\nimport { createCard } from \"./components/card.js\";\r\nimport { cardData } from \"./components/cards.js\";\r\nimport { openModal, closeModal, handleModalClick } from \"./components/modal.js\";\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\nimport {\r\n  getInitialCards,\r\n  createCardApi,\r\n  likeCard,\r\n  unLikeCard,\r\n  getUser,\r\n  editProfileUser,\r\n  deleteCard,\r\n  updateUserAvatar,\r\n} from \"./components/api.js\";\r\n\r\nconst cardElement = document.querySelector(\"#card-template\").content;\r\nconst cardList = document.querySelector(\".places__list\");\r\n//форма профиля\r\nconst editProfileForm = document.forms[\"edit-profile\"];\r\nconst nameInput = editProfileForm.elements.name;\r\nconst descriptionInput = editProfileForm.elements.description;\r\nconst profileFormSubmitButton = editProfileForm.querySelector(\".popup__button\");\r\n\r\n// форма новой карточки\r\nconst newPlaceForm = document.forms[\"new-place\"];\r\nconst nameInputImage = newPlaceForm.elements[\"place-name\"];\r\nconst linkInputImage = newPlaceForm.elements.link;\r\nconst cardFormSubmitButton = newPlaceForm.querySelector(\".popup__button\");\r\n\r\n// кнопки\r\nconst editProfileButton = document.querySelector(\".profile__edit-button\");\r\nconst addCardButton = document.querySelector(\".profile__add-button\");\r\nconst profileImageButton = document.querySelector(\".profile__image\");\r\nconst profileImage = document.querySelector(\".profile__image\");\r\n\r\n// поля профиля\r\nconst profileName = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\n\r\n// форма аватара\r\nconst profileImageForm = document.forms[\"edit-avatar\"];\r\nconst profileImageInput = profileImageForm.elements.avatar;\r\nconst profileImageFormSubmitButton =\r\n  profileImageForm.querySelector(\".popup__button\");\r\n\r\n// модалки\r\nconst popupProfile = document.querySelector(\".popup_type_edit\");\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupImage = document.querySelector(\".popup_type_image\");\r\nconst popupAvatarProfile = document.querySelector(\".popup_type_edit-avatar\");\r\n\r\nconst popupImageCard = popupImage.querySelector(\".popup__image\");\r\nconst popupCaption = popupImage.querySelector(\".popup__caption\");\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nfunction setUserInfo({ name, about, avatar }) {\r\n  profileName.textContent = name;\r\n  profileDescription.textContent = about;\r\n  profileImageButton.style.backgroundImage = `url(${avatar})`;\r\n}\r\n\r\nfunction handleEditProfile() {\r\n  openModal(popupProfile);\r\n  nameInput.value = profileName.textContent;\r\n  descriptionInput.value = profileDescription.textContent;\r\n  clearValidation(editProfileForm, validationConfig);\r\n}\r\n\r\nfunction handleAddCard() {\r\n  clearValidation(newPlaceForm, validationConfig);\r\n  openModal(popupNewCard);\r\n}\r\n\r\nfunction handleProfileFormSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading({\r\n    buttonElement: profileFormSubmitButton,\r\n    isLoading: true,\r\n  });\r\n\r\n  editProfileUser({\r\n    name: nameInput.value,\r\n    about: descriptionInput.value,\r\n  })\r\n    .then(({ name, about, avatar }) => {\r\n      setUserInfo({\r\n        name,\r\n        about,\r\n        avatar,\r\n      });\r\n\r\n      closeModal(popupProfile);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      renderLoading({\r\n        buttonElement: profileFormSubmitButton,\r\n        isLoading: false,\r\n      });\r\n    });\r\n}\r\n\r\nfunction handleCardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  renderLoading({\r\n    buttonElement: cardFormSubmitButton,\r\n    isLoading: true,\r\n  });\r\n\r\n  createCardApi({\r\n    name: nameInputImage.value,\r\n    link: linkInputImage.value,\r\n  })\r\n    .then((cardData) => {\r\n      cardList.prepend(\r\n        createCard({\r\n          data: cardData,\r\n          onDelete: deleteCardHandler,\r\n          onLike: handleLikeCard,\r\n          onImageClick: handleShowCard,\r\n          currentUserId: cardData.owner[\"_id\"],\r\n          template: cardElement,\r\n        })\r\n      );\r\n      closeModal(popupNewCard);\r\n      newPlaceForm.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      renderLoading({\r\n        buttonElement: cardFormSubmitButton,\r\n        isLoading: false,\r\n      });\r\n    });\r\n}\r\n\r\nfunction handleShowCard(data) {\r\n  openModal(popupImage);\r\n  popupImageCard.src = data.link;\r\n  popupImageCard.alt = data.name;\r\n  popupCaption.textContent = data.name;\r\n}\r\n\r\nfunction deleteCardHandler({ cardId, buttonElement }) {\r\n  deleteCard(cardId);\r\n}\r\n\r\nfunction handleLikeCard({ cardId, buttonElement, counterElement }) {\r\n  buttonElement.disabled = true;\r\n  const isActiveLike = buttonElement.classList.contains(\r\n    \"card__like-button_is-active\"\r\n  );\r\n\r\n  const likeMethod = isActiveLike ? unLikeCard : likeCard;\r\n  likeMethod(cardId)\r\n    .then(({ likes }) => {\r\n      buttonElement.classList.toggle(\"card__like-button_is-active\");\r\n      counterElement.classList.toggle(\r\n        \"card__like-counter_is-active\",\r\n        likes.length\r\n      );\r\n      counterElement.textContent = likes.length || \"\";\r\n    })\r\n    .catch((err) => console.error(err))\r\n    .finally(() => {\r\n      buttonElement.disabled = false;\r\n    });\r\n\r\n  // if (isActiveLike) {\r\n  //   unLikeCard(cardId)\r\n  //     .then(({ likes }) => {\r\n  //       buttonElement.classList.remove(\"card__like-button_is-active\");\r\n\r\n  //       if (likes.length) {\r\n  //         counterElement.classList.add(\"card__like-counter_is-active\");\r\n  //         counterElement.textContent = likes.length;\r\n  //       } else {\r\n  //         counterElement.classList.remove(\"card__like-counter_is-active\");\r\n  //         counterElement.textContent = \"\";\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => console.error(err))\r\n  //     .finally(() => {\r\n  //       buttonElement.disabled = false;\r\n  //     });\r\n  // } else {\r\n  //   likeCard(cardId)\r\n  //     .then(({ likes }) => {\r\n  //       buttonElement.classList.add(\"card__like-button_is-active\");\r\n\r\n  //       counterElement.classList.add(\"card__like-counter_is-active\");\r\n  //       counterElement.textContent = likes.length;\r\n  //     })\r\n  //     .catch((err) => console.error(err))\r\n  //     .finally(() => {\r\n  //       buttonElement.disabled = false;\r\n  //     });\r\n  // }\r\n}\r\n\r\nconst handleProfileImageFormSubmit = (event) => {\r\n  event.preventDefault();\r\n\r\n  renderLoading({\r\n    buttonElement: profileImageFormSubmitButton,\r\n    isLoading: true,\r\n  });\r\n\r\n  updateUserAvatar(profileImageInput.value)\r\n    .then(({ name, about, avatar }) => {\r\n      setUserInfo({\r\n        name,\r\n        description: about,\r\n        avatar,\r\n      });\r\n\r\n      closeModal(popupAvatarProfile);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      renderLoading({\r\n        buttonElement: profileImageFormSubmitButton,\r\n        isLoading: false,\r\n      });\r\n    });\r\n};\r\n\r\nconst renderLoading = ({ buttonElement, isLoading }) => {\r\n  if (isLoading) {\r\n    buttonElement.textContent = \"Сохранение...\";\r\n  } else {\r\n    buttonElement.textContent = \"Сохранить\";\r\n  }\r\n};\r\n\r\nconst handleProfileImageClick = () => {\r\n  profileImageForm.reset();\r\n\r\n  clearValidation(profileImageForm, validationConfig);\r\n\r\n  openModal(popupAvatarProfile);\r\n};\r\n\r\naddCardButton.addEventListener(\"click\", handleAddCard);\r\neditProfileButton.addEventListener(\"click\", handleEditProfile);\r\nprofileImage.addEventListener(\"click\", handleProfileImageClick);\r\n\r\npopupProfile.addEventListener(\"click\", handleModalClick);\r\npopupNewCard.addEventListener(\"click\", handleModalClick);\r\npopupImage.addEventListener(\"click\", handleModalClick);\r\npopupAvatarProfile.addEventListener(\"click\", handleModalClick);\r\n\r\neditProfileForm.addEventListener(\"submit\", handleProfileFormSubmit);\r\nnewPlaceForm.addEventListener(\"submit\", handleCardFormSubmit);\r\nprofileImageForm.addEventListener(\"submit\", handleProfileImageFormSubmit);\r\n\r\nenableValidation(validationConfig);\r\n\r\nPromise.all([getUser(), getInitialCards()])\r\n  .then(([{ name, about, avatar, [\"_id\"]: currentUserId }, cardsData]) => {\r\n    setUserInfo({\r\n      name,\r\n      about,\r\n      avatar,\r\n    });\r\n\r\n    cardsData.forEach((cardData) => {\r\n      cardList.append(\r\n        createCard({\r\n          currentUserId,\r\n          data: cardData,\r\n          onDelete: deleteCardHandler,\r\n          onLike: handleLikeCard,\r\n          onImageClick: handleShowCard,\r\n          template: cardElement,\r\n        })\r\n      );\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });\r\n"],"names":["createCard","_ref","data","onDelete","onLike","currentUserId","onImageClick","cardElement","template","querySelector","cloneNode","deleteCardButton","cardLike","imgCard","cardTitle","counter","src","link","alt","name","textContent","likes","length","classList","add","find","owner","addEventListener","evt","cardId","buttonElement","counterElement","target","handlerKeydown","key","closeModal","document","openModal","element","remove","removeEventListener","handleModalClick","event","contains","closest","hideInputError","_ref2","formElement","inputElement","inputErrorClass","errorClass","errorElement","concat","id","toggleButtonState","_ref4","inputList","submitButtonElement","inactiveButtonClass","some","input","validity","valid","hasInvalidInput","disabled","clearValidation","_ref7","submitButtonSelector","inputSelector","_toConsumableArray","querySelectorAll","forEach","config","baseUrl","headers","authorization","likeCard","fetch","method","then","errorHandler","unLikeCard","res","ok","json","Promise","reject","status","content","cardList","editProfileForm","forms","nameInput","elements","descriptionInput","description","profileFormSubmitButton","newPlaceForm","nameInputImage","linkInputImage","cardFormSubmitButton","editProfileButton","addCardButton","profileImageButton","profileImage","profileName","profileDescription","profileImageForm","profileImageInput","avatar","profileImageFormSubmitButton","popupProfile","popupNewCard","popupImage","popupAvatarProfile","popupImageCard","popupCaption","validationConfig","formSelector","setUserInfo","about","style","backgroundImage","handleShowCard","deleteCardHandler","_ref3","deleteCard","handleLikeCard","_ref5","toggle","catch","err","console","error","finally","_ref6","renderLoading","isLoading","value","reset","preventDefault","body","JSON","stringify","cardData","prepend","url","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","all","_ref8","_ref9","_ref9$","cardsData","append"],"sourceRoot":""}